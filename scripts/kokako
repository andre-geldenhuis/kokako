#!/usr/bin/env python

import argparse
import os
import sys
import time

from kokako.score import Detector, get_audio
from kokako.detectors import *

# Get the detectors that we know about
detectors = Detector.__subclasses__()
detector_lookup = {}
for d in detectors:
    detector_lookup[d.code] = d()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        epilog="Available detectors:\n  " +
               "\n  ".join(d for d in detector_lookup),
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('-o',
                        '--output',
                        default=sys.stdout,
                        type=argparse.FileType('w'),
                        help='output file')
    parser.add_argument('detectors', nargs='+',
                        help='name of the detectors to run')
    parser.add_argument('-p', '--path', help='path to walk over', default='.')

    args = parser.parse_args()
    detectors = []
    try:
        for detector in args.detectors:
            detectors.append(detector_lookup[detector])
    except KeyError:
        msg = "Unknown detector, %s" % args.detectors
        raise ValueError(msg)

    header = ['path'] + detectors
    times = {d.code: [] for d in detectors}
    for root, dirs, files in os.walk(args.path):
        for f in files:
            if f.endswith(".wav"):
                path = os.path.join(root, f)
                audio = get_audio(path)
                for detector in detectors:
                    start = time.perf_counter()
                    results = detector.score(audio)
                    end = time.perf_counter()
                    runtime = end - start
                    times[detector.code].append(runtime)
                    print(path, detector, results, runtime)
    for detector in times:
        avg = sum(times[detector])/float(len(times[detector]))
        print('{}: {}s'.format(detector, avg))
